type Query{
    Marker(username: String!): [Marker!]!
    UserPlan(_userId: ID!): [Plan!]!
    Username(_id: ID!): String
    Plan(_id: ID!): Plan!
    signIn(username: String!, password: String!): ID 
}

type Mutation{
    """
    clearAll is not supposed to be called by any user,
    the function is only called for debugging
    """
    clearAll: String
    
    # For marker
    addMarker(marker:addMarkerInput!): ID!
    deleteMarker(_id: ID!): String
    updateMarker(_id: ID!, newTitle: String, newDescription: String): String
    
    # For plan
    newPlan(username: String!, title: String!): ID!
    renamePlan(_id: ID!, newTitle: String!): String
    deletePlan(_id: ID!): String

    # For spot
    newSpot(planID: ID!, markerID: ID!): ID!
    deleteSpot(_id: ID!): String
    updateSpotStartTime(_id: ID!, time: String!): String
    updateSpotEndTime(_id: ID!, time: String!): String

    # For user
    signUp(username: String!, password: String!): String
}

type Subscription{
    subscribeMarker(username: String!): subscribeMarkerOutput!
    subscribePlan(username: String!): subscribePlanOutput!
}

type User{
    username: String!
    password: String!
}

type Plan{
    username: String!
    title: String!
    spots: [Spot!]!
    _id: ID!
}

type Spot{
    _id: ID!
    startTime: String! # Use new Date(Date.parse(str)) to decode
    endTime: String! # Use new Date(Date.parse(str)) to decode
    location: Marker!
}

input addMarkerInput{
    username: String!
    title: String!
    coordinates: [Float!]!
    description: String
}

type subscribeMarkerOutput{
    mutation: MarkerMutationType!
    data: Marker!
}

type subscribePlanOutput{
    mutation: PlanMutationType!
    data: PlanSubscribeData!
}

type PlanSubscribeData{
    username: String
    title: String
    spots: [Spot!]
    _id: ID!
}

enum PlanMutationType{
    NEW
    DELETE
    UPDATE
}

enum MarkerMutationType{
    NEW
    DELETE
    UPDATE
}

type Marker{
    username: String!
    properties: Properties!
    geometry: Geometry!
    _id: ID!
}

type Properties{
    title: String!
    description: String
}

type Geometry{
    coordinates: [Float!]!
}
